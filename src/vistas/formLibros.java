package vistas;

import repositorios.LibroRepositorio;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.Libro;
import repositorios.AutorRepositorio;
import repositorios.SeccionRepositorio;

public class formLibros extends javax.swing.JFrame {
    
    private final LibroRepositorio libroRepositorio;
    
    private final SeccionRepositorio seccionRepositorio;
    
    private final AutorRepositorio autorRepositorio;
    
    private formPrincipal fromPrincipal;
 
    public formLibros(formPrincipal formPrincipal) {
        initComponents();
        this.libroRepositorio = new LibroRepositorio();
        this.fromPrincipal = formPrincipal;
        this.seccionRepositorio = new SeccionRepositorio();
        this.autorRepositorio = new AutorRepositorio();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlLibro = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        lblClaveLibro = new javax.swing.JLabel();
        txtClaveLibro = new javax.swing.JTextField();
        lblAutor = new javax.swing.JLabel();
        lblSeccion = new javax.swing.JLabel();
        cmbAutor = new javax.swing.JComboBox<>();
        cmbSeccion = new javax.swing.JComboBox<>();
        lblResumen = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaResumen = new javax.swing.JTextArea();
        btnAgregar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblExiten = new javax.swing.JLabel();
        txtExitencias = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLibros = new javax.swing.JTable();
        btnModificar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pnlAutor = new javax.swing.JPanel();
        pnlSeccion = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBorder(new javax.swing.border.MatteBorder(null));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N

        pnlLibro.setBackground(new java.awt.Color(170, 215, 217));
        pnlLibro.setBorder(new javax.swing.border.MatteBorder(null));
        pnlLibro.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N

        lblTitulo.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N
        lblTitulo.setText("Título:");

        txtTitulo.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N

        lblClaveLibro.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N
        lblClaveLibro.setText("Clave:");

        txtClaveLibro.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N

        lblAutor.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N
        lblAutor.setText("Autor:");

        lblSeccion.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N
        lblSeccion.setText("Seccion:");

        cmbAutor.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N

        cmbSeccion.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N

        lblResumen.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N
        lblResumen.setText("Resumen:");

        txaResumen.setColumns(20);
        txaResumen.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N
        txaResumen.setRows(5);
        jScrollPane1.setViewportView(txaResumen);

        btnAgregar.setBackground(new java.awt.Color(0, 153, 255));
        btnAgregar.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("Agregar");
        btnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarNuevoLibro(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(255, 0, 0));
        btnCancelar.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarOperacion(evt);
            }
        });

        lblExiten.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N
        lblExiten.setText("Exitencias:");

        txtExitencias.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N

        tblLibros.setFont(new java.awt.Font("Lucida Console", 0, 12)); // NOI18N
        tblLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CLAVE", "TÍTULO", "RESUMEN", "AUTOR", "SECCIÓN", "EXISTENCIAS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLibros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actualizarOEliminarLibro(evt);
            }
        });
        jScrollPane2.setViewportView(tblLibros);
        if (tblLibros.getColumnModel().getColumnCount() > 0) {
            tblLibros.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblLibros.getColumnModel().getColumn(0).setMaxWidth(60);
            tblLibros.getColumnModel().getColumn(1).setMinWidth(10);
            tblLibros.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblLibros.getColumnModel().getColumn(1).setMaxWidth(200);
            tblLibros.getColumnModel().getColumn(2).setPreferredWidth(200);
            tblLibros.getColumnModel().getColumn(3).setPreferredWidth(200);
            tblLibros.getColumnModel().getColumn(4).setPreferredWidth(100);
            tblLibros.getColumnModel().getColumn(5).setPreferredWidth(100);
            tblLibros.getColumnModel().getColumn(6).setPreferredWidth(70);
            tblLibros.getColumnModel().getColumn(6).setMaxWidth(80);
        }

        btnModificar.setBackground(new java.awt.Color(0, 255, 0));
        btnModificar.setFont(new java.awt.Font("Lucida Console", 0, 20)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarLibro(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Console", 0, 10)); // NOI18N
        jLabel1.setText("- Selecciona un elemento de la tabla para modificarlo.");

        jLabel2.setFont(new java.awt.Font("Lucida Console", 0, 10)); // NOI18N
        jLabel2.setText("- Da doble click sobre un libro de la tabla para eliminarlo.");

        javax.swing.GroupLayout pnlLibroLayout = new javax.swing.GroupLayout(pnlLibro);
        pnlLibro.setLayout(pnlLibroLayout);
        pnlLibroLayout.setHorizontalGroup(
            pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLibroLayout.createSequentialGroup()
                .addGroup(pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLibroLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlLibroLayout.createSequentialGroup()
                                .addComponent(lblResumen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlLibroLayout.createSequentialGroup()
                                .addComponent(lblSeccion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbSeccion, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlLibroLayout.createSequentialGroup()
                                .addGroup(pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLibroLayout.createSequentialGroup()
                                        .addComponent(lblClaveLibro)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtClaveLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlLibroLayout.createSequentialGroup()
                                        .addComponent(lblTitulo)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLibroLayout.createSequentialGroup()
                                        .addComponent(lblAutor)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cmbAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                                .addGroup(pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)))))
                    .addGroup(pnlLibroLayout.createSequentialGroup()
                        .addGroup(pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlLibroLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(btnAgregar)
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLibroLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblExiten)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtExitencias, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlLibroLayout.createSequentialGroup()
                                .addComponent(btnModificar)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancelar))))
                    .addGroup(pnlLibroLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        pnlLibroLayout.setVerticalGroup(
            pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLibroLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitulo)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblClaveLibro)
                    .addComponent(txtClaveLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAutor)
                    .addComponent(cmbAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeccion)
                    .addComponent(cmbSeccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblResumen)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblExiten)
                    .addComponent(txtExitencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnModificar)
                    .addComponent(btnCancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jTabbedPane1.addTab("Libro", pnlLibro);

        pnlAutor.setBackground(new java.awt.Color(0, 255, 153));
        pnlAutor.setBorder(new javax.swing.border.MatteBorder(null));

        javax.swing.GroupLayout pnlAutorLayout = new javax.swing.GroupLayout(pnlAutor);
        pnlAutor.setLayout(pnlAutorLayout);
        pnlAutorLayout.setHorizontalGroup(
            pnlAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 870, Short.MAX_VALUE)
        );
        pnlAutorLayout.setVerticalGroup(
            pnlAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 561, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Autor", pnlAutor);

        pnlSeccion.setBackground(new java.awt.Color(255, 51, 51));
        pnlSeccion.setBorder(new javax.swing.border.MatteBorder(null));

        javax.swing.GroupLayout pnlSeccionLayout = new javax.swing.GroupLayout(pnlSeccion);
        pnlSeccion.setLayout(pnlSeccionLayout);
        pnlSeccionLayout.setHorizontalGroup(
            pnlSeccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 870, Short.MAX_VALUE)
        );
        pnlSeccionLayout.setVerticalGroup(
            pnlSeccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 561, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Seccion", pnlSeccion);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        this.fromPrincipal.setEnabled(true);
    }//GEN-LAST:event_formWindowClosed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        cargarTablaLibros();
        
        cargarComboAutores();
        
        cargarComboSecciones();
    }//GEN-LAST:event_formWindowOpened

    private void agregarNuevoLibro(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarNuevoLibro
        // TODO add your handling code here:
        final Libro libro = obtenerDatos();
        
        if (libro != null) {
            int statusCreacion = libroRepositorio.agregarLibro(libro);
        
            if (statusCreacion == 0) {
               JOptionPane.showMessageDialog(this, "No se pudo agregar el libro, favor de intentarlo más tarde.");
               return;
            }
        
            JOptionPane.showMessageDialog(this, "Libro agregado exitosamente.");
        
            cargarTablaLibros();
        
            limpiarCampos();
        }
    }//GEN-LAST:event_agregarNuevoLibro

    private void actualizarOEliminarLibro(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarOEliminarLibro
        // TODO add your handling code here:

        DefaultTableModel modelo = (DefaultTableModel) tblLibros.getModel();
        int filaSeleccionada = tblLibros.getSelectedRow();
        
        switch (evt.getClickCount()) {        
            case 1 -> {
                
                btnModificar.setEnabled(true);
                btnAgregar.setEnabled(false);
                
                txtClaveLibro.setText(modelo.getValueAt(filaSeleccionada, 1).toString());
                txtTitulo.setText(modelo.getValueAt(filaSeleccionada, 2).toString());
                txaResumen.setText(modelo.getValueAt(filaSeleccionada, 3).toString());
                cmbAutor.setSelectedItem(modelo.getValueAt(filaSeleccionada, 4).toString());
                cmbSeccion.setSelectedItem(modelo.getValueAt(filaSeleccionada, 5).toString());
                txtExitencias.setText(modelo.getValueAt(filaSeleccionada, 6).toString());
            }
            case 2 -> {
                String clave = modelo.getValueAt(filaSeleccionada, 1).toString();
                
                int confirmacion = JOptionPane.showConfirmDialog(this, "¿Continuar con la eliminación del libro con código:".concat(clave).concat("?"));
                
                if (confirmacion != JOptionPane.YES_OPTION) {
                    JOptionPane.showMessageDialog(this, "Operación cancelada");
                    return;
                }
                
                libroRepositorio.eliminarLibro(clave);
                
                JOptionPane.showMessageDialog(this, "Libro eliminado exitosamente.");
                
                limpiarCampos();
                cargarTablaLibros();
                }
            
            default -> {
                limpiarCampos();
            }
        }
    }//GEN-LAST:event_actualizarOEliminarLibro

    private void cancelarOperacion(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarOperacion
        // TODO add your handling code here:
        limpiarCampos();
    }//GEN-LAST:event_cancelarOperacion

    private void modificarLibro(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarLibro
        // TODO add your handling code here:
        final Libro libro = obtenerDatos();
        
        DefaultTableModel modelo = (DefaultTableModel) tblLibros.getModel();
        int filaSeleccionada = tblLibros.getSelectedRow();
        
        int id = Integer.parseInt(modelo.getValueAt(filaSeleccionada, 0).toString());
        
        if(libro != null) {
            libro.setIdLibro(id);
            
            int statusActualizacion = libroRepositorio.actualizarLibro(libro);
        
            if (statusActualizacion == 0) {
                JOptionPane.showMessageDialog(this, "No se pudo actualizar el libro, favor de intentarlo más tarde.");
                return;
            }
        
            JOptionPane.showMessageDialog(this, "Libro actualizado exitosamente.");
        
            cargarTablaLibros();
        
            limpiarCampos();
        }
    }//GEN-LAST:event_modificarLibro

    private int obtenerExistencias() {
        try {
            return Integer.parseInt(txtExitencias.getText());
        } catch (NumberFormatException e) {
            return 0;
        }
    }
    
    private Libro obtenerDatos() {
        
        int existencias = obtenerExistencias();
        
        String titulo = txtTitulo.getText();
        String clave = txtClaveLibro.getText();
        String autor = cmbAutor.getSelectedItem().toString();
        String seccion = cmbSeccion.getSelectedItem().toString();
        String resumen = txaResumen.getText();
        
        if (existencias == 0 || titulo.isBlank() || clave.isBlank() || autor.isBlank() || seccion.isBlank() || resumen.isBlank()) {
            JOptionPane.showMessageDialog(this, "Favor de llenar todos los campos correctamente.");
            return null;
        }
        
        return new Libro(0, clave, titulo, resumen, existencias, seccion, autor);
    }
    
    private void limpiarCampos() {
        txtTitulo.setText("");
        txtClaveLibro.setText("");
        cmbAutor.setSelectedIndex(0);
        cmbSeccion.setSelectedIndex(0);
        txaResumen.setText("");
        txtExitencias.setText("");
        
        btnAgregar.setEnabled(true);
        btnModificar.setEnabled(false);
    }

    private void cargarComboSecciones() {
        List<String> secciones = seccionRepositorio.obtenerSecciones();
        
        cmbSeccion.removeAllItems();
        
        cmbSeccion.addItem("");
        for (String seccion : secciones) {
            cmbSeccion.addItem(seccion);
        }
    }

    private void cargarComboAutores() {
        List<String> autores = autorRepositorio.obtenerAutores();
        
        cmbAutor.removeAllItems();
        
        cmbAutor.addItem("");
        for (String autor : autores) {
            cmbAutor.addItem(autor);
        }
    }

    private void cargarTablaLibros() {
        // TODO add your handling code here:
        List<Libro> libros = libroRepositorio.obtenerLibros();
        
        DefaultTableModel modelo = (DefaultTableModel) tblLibros.getModel();
        modelo.getDataVector().clear();
        
        for (Libro libro : libros) {
            
            modelo.addRow(new Object[]{
                libro.getIdLibro(),
                libro.getClaveLibro(),
                libro.getNomLibro(),
                libro.getResumenLibro(),
                libro.getNomAutor(),
                libro.getNomSeccion(),
                libro.getExistenciasLibro()
            });
        }
        
        tblLibros.setModel(modelo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cmbAutor;
    private javax.swing.JComboBox<String> cmbSeccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAutor;
    private javax.swing.JLabel lblClaveLibro;
    private javax.swing.JLabel lblExiten;
    private javax.swing.JLabel lblResumen;
    private javax.swing.JLabel lblSeccion;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlAutor;
    private javax.swing.JPanel pnlLibro;
    private javax.swing.JPanel pnlSeccion;
    private javax.swing.JTable tblLibros;
    private javax.swing.JTextArea txaResumen;
    private javax.swing.JTextField txtClaveLibro;
    private javax.swing.JTextField txtExitencias;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
